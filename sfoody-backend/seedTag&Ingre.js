const mongoose = require('mongoose');
const Tag = require('./models/tagModel'); // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n ƒë√∫ng v·ªõi file Tag model
const Ingredient = require('./models/ingredientModel'); // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n ƒë√∫ng v·ªõi file Ingredient model

const MONGODB_URI = 'mongodb+srv://root:8KPVZpgNIqnIq2gP@cluster0.ipujnzr.mongodb.net/Sfoody'; // Thay ƒë·ªïi n·∫øu b·∫°n d√πng URI kh√°c

const tags = [
  // ingredient
  { name: 'Th·ªãt heo', category: 'ingredient' },
  { name: 'Th·ªãt b√≤', category: 'ingredient' },
  { name: 'Th·ªãt g√†', category: 'ingredient' },
  { name: 'C√°', category: 'ingredient' },
  { name: 'H·∫£i s·∫£n', category: 'ingredient' },
  { name: 'Tr·ª©ng', category: 'ingredient' },
  { name: 'Rau xanh', category: 'ingredient' },

  // cooking_style
  { name: 'Chi√™n', category: 'cooking_style' },
  { name: 'X√†o', category: 'cooking_style' },
  { name: 'Lu·ªôc', category: 'cooking_style' },
  { name: 'H·∫•p', category: 'cooking_style' },
  { name: 'Kho', category: 'cooking_style' },
  { name: 'N∆∞·ªõng', category: 'cooking_style' },
  { name: 'Om', category: 'cooking_style' },
  { name: 'H·∫ßm', category: 'cooking_style' },

  // nutrition
  { name: 'Gi√†u ƒë·∫°m', category: 'nutrition' },
  { name: 'Gi√†u ch·∫•t x∆°', category: 'nutrition' },
  { name: '√çt b√©o', category: 'nutrition' },
  { name: 'ƒÇn chay', category: 'nutrition' },
  { name: 'Keto', category: 'nutrition' },
    { name: 'Low carb', category: 'nutrition' },
    { name: 'Kh√¥ng gluten', category: 'nutrition' },
    { name: '√çt ƒë∆∞·ªùng', category: 'nutrition' },
    { name: '√çt mu·ªëi', category: 'nutrition' },
    { name: '√çt calo', category: 'nutrition' },
    { name: 'Gi√†u vitamin', category: 'nutrition' },
    { name: 'Gi√†u kho√°ng ch·∫•t', category: 'nutrition' },
    
  // region
  { name: 'Hu·∫ø', category: 'region' },
  { name: 'H√† N·ªôi', category: 'region' },
  { name: 'S√†i G√≤n', category: 'region' },

  // occasion
  { name: 'T·∫øt', category: 'occasion' },
  { name: 'Trung thu', category: 'occasion' },
  { name: 'Sinh nh·∫≠t', category: 'occasion' },
  { name: 'C∆∞·ªõi h·ªèi', category: 'occasion' },
  { name: 'ƒÇn tr∆∞a', category: 'occasion' },
  { name: 'ƒÇn t·ªëi', category: 'occasion' },
    { name: 'Ti·ªác t√πng', category: 'occasion' },
    { name: 'ƒê√°m gi·ªó', category: 'occasion' },
    { name: 'D√£ ngo·∫°i', category: 'occasion' },
    { name: 'Du l·ªãch', category: 'occasion' },

  // cooking_time
  { name: 'D∆∞·ªõi 15 ph√∫t', category: 'cooking_time' },
  { name: '15‚Äì30 ph√∫t', category: 'cooking_time' },
  { name: '30‚Äì60 ph√∫t', category: 'cooking_time' },
  { name: 'Tr√™n 1 ti·∫øng', category: 'cooking_time' },

  // other
  { name: 'D·ªÖ l√†m', category: 'other' },
  { name: 'Cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu', category: 'other' },
  { name: 'Cho b√© ƒÉn d·∫∑m', category: 'other' },
    { name: 'Th√≠ch h·ª£p cho ng∆∞·ªùi ƒÉn ki√™ng', category: 'other' },
    { name: 'Th√≠ch h·ª£p cho ng∆∞·ªùi ƒÉn chay', category: 'other' },
];

const ingredients = [
  // meat
  { name: 'Th·ªãt heo', category: 'meat' },
  { name: 'Th·ªãt g√†', category: 'meat' },
  { name: 'C√° h·ªìi', category: 'meat' },
  { name: 'T√¥m', category: 'meat' },
  { name: 'Cua', category: 'meat' },
  { name: 'Tr·ª©ng g√†', category: 'meat' },
    { name: 'Th·ªãt v·ªãt', category: 'meat' },
    { name: 'Th·ªãt c·ª´u', category: 'meat' },
    { name: 'Th·ªãt ngan', category: 'meat' },
    { name: 'Th·ªãt ng·ªóng', category: 'meat' },
    { name: 'Th·ªãt d√™', category: 'meat' },
    { name: 'Th·ªãt ba ch·ªâ', category: 'meat' },

  // vegetable
  { name: 'Rau mu·ªëng', category: 'vegetable' },
  { name: 'Rau c·∫£i', category: 'vegetable' },
  { name: 'C√† r·ªët', category: 'vegetable' },
  { name: 'Khoai t√¢y', category: 'vegetable' },
  { name: 'Gi√° ƒë·ªó', category: 'vegetable' },
  { name: 'N·∫•m r∆°m', category: 'vegetable' },
  { name: 'Kh·ªï qua', category: 'vegetable' },
    { name: 'B√¥ng c·∫£i xanh', category: 'vegetable' },
    { name: '·ªöt chu√¥ng', category: 'vegetable' },
    { name: 'Ng√≤ r√≠', category: 'vegetable' },
    { name: 'H√∫ng qu·∫ø', category: 'vegetable' },
    { name: 'T√≠a t√¥', category: 'vegetable' },
    { name: 'Rau di·∫øp', category: 'vegetable' },

  // spice
  { name: 'ƒê∆∞·ªùng', category: 'spice' },
  { name: 'D·∫ßu ƒÉn', category: 'spice' },
  { name: '·ªöt', category: 'spice' },
    { name: 'H√†nh t√≠m', category: 'spice' },
    { name: 'S·∫£', category: 'spice' },
    { name: 'M·∫Øm t√¥m', category: 'spice' },
    { name: 'B·ªôt ng·ªçt', category: 'spice' },
    { name: 'N∆∞·ªõc t∆∞∆°ng', category: 'spice' },

  // other
  { name: 'G·∫°o', category: 'other' },
  { name: 'Ph·ªü', category: 'other' },
    { name: 'Mi·∫øn', category: 'other' },
    { name: 'B√°nh m√¨', category: 'other' },
    { name: 'B·ªôt nƒÉng', category: 'other' },
    { name: 'B·ªôt ng√¥', category: 'other' },
    { name: 'N∆∞·ªõc d·ª´a', category: 'other' },
    { name: 'S·ªØa t∆∞∆°i', category: 'other' },
    { name: 'C∆°m', category: 'other' },
  { name: 'M√¨ g√≥i', category: 'other' },
  { name: 'B·ªôt m√¨', category: 'other' },
  { name: 'Ph√¥ mai', category: 'other' },
  { name: 'S·ªØa ƒë·∫∑c', category: 'other' },
  { name: 'M·∫≠t ong', category: 'other' },
];

async function seedDatabase() {
  try {
    await mongoose.connect(MONGODB_URI);
    console.log('üå± Connected to MongoDB');

    await Tag.insertMany(tags);
    await Ingredient.insertMany(ingredients);

    console.log('‚úÖ Seed completed successfully!');
  } catch (err) {
    console.error('‚ùå Seed failed:', err);
  } finally {
    mongoose.connection.close();
  }
}

seedDatabase();
